/* global describe it beforeEach */

var Month = require('../month'),
    assert = require('assert');

describe('specific month (US/UK)', function () {

  beforeEach(function () {
    Month.setFirstWeekDay(0);
  });

  it('june 2017', function () {

    var m = new Month(2017, 5);

    assert.strictEqual( m.days.map(function (d) {
      return d.year + '/' + d.month + '/' + d.date;
    }).join(', '), '2017/4/28, 2017/4/29, 2017/4/30, 2017/4/31, 2017/5/1, 2017/5/2, 2017/5/3, 2017/5/4, 2017/5/5, 2017/5/6, 2017/5/7, 2017/5/8, 2017/5/9, 2017/5/10, 2017/5/11, 2017/5/12, 2017/5/13, 2017/5/14, 2017/5/15, 2017/5/16, 2017/5/17, 2017/5/18, 2017/5/19, 2017/5/20, 2017/5/21, 2017/5/22, 2017/5/23, 2017/5/24, 2017/5/25, 2017/5/26, 2017/5/27, 2017/5/28, 2017/5/29, 2017/5/30, 2017/6/1, 2017/6/2, 2017/6/3, 2017/6/4, 2017/6/5, 2017/6/6, 2017/6/7, 2017/6/8' );

  });

  it('june 2017 getByDay()', function () {

    var m = new Month(2017, 5);
    m = m.getByDay();
    var expected = {
      Sunday: [ '2017/4/28', '2017/5/4', '2017/5/11', '2017/5/18', '2017/5/25', '2017/6/2' ],
      Monday: [ '2017/4/29', '2017/5/5', '2017/5/12', '2017/5/19', '2017/5/26', '2017/6/3' ],
      Tuesday: [ '2017/4/30', '2017/5/6', '2017/5/13', '2017/5/20', '2017/5/27', '2017/6/4' ],
      Wednesday: [ '2017/4/31', '2017/5/7', '2017/5/14', '2017/5/21', '2017/5/28', '2017/6/5' ],
      Thursday: [ '2017/5/1', '2017/5/8', '2017/5/15', '2017/5/22', '2017/5/29', '2017/6/6' ],
      Friday: [ '2017/5/2', '2017/5/9', '2017/5/16', '2017/5/23', '2017/5/30', '2017/6/7' ],
      Saturday: [ '2017/5/3', '2017/5/10', '2017/5/17', '2017/5/24', '2017/6/1', '2017/6/8' ]
    };
    var actual = {};
    var days = Object.keys(m);
    days.forEach(function(day) {
      var arr = m[day].map(function(d) {
        return d.year + '/' + d.month + '/' + d.date;
      });
      actual[day] = arr;
    });
    assert.deepStrictEqual( actual, expected );

  });

  it('june 2018', function () {

    var m = new Month(2018, 5);

    assert.strictEqual( m.days.map(function (d) {
      return d.year + '/' + d.month + '/' + d.date;
    }).join(', '), '2018/4/27, 2018/4/28, 2018/4/29, 2018/4/30, 2018/4/31, 2018/5/1, 2018/5/2, 2018/5/3, 2018/5/4, 2018/5/5, 2018/5/6, 2018/5/7, 2018/5/8, 2018/5/9, 2018/5/10, 2018/5/11, 2018/5/12, 2018/5/13, 2018/5/14, 2018/5/15, 2018/5/16, 2018/5/17, 2018/5/18, 2018/5/19, 2018/5/20, 2018/5/21, 2018/5/22, 2018/5/23, 2018/5/24, 2018/5/25, 2018/5/26, 2018/5/27, 2018/5/28, 2018/5/29, 2018/5/30, 2018/6/1, 2018/6/2, 2018/6/3, 2018/6/4, 2018/6/5, 2018/6/6, 2018/6/7' );

  });

});

describe('specific month (ES)', function () {

  beforeEach(function () {
    Month.setFirstWeekDay(1);
  });


  it('june 2017', function () {

    var m = new Month(2017, 5);

    assert.strictEqual( m.days.map(function (d) {
      return d.year + '/' + d.month + '/' + d.date;
    }).join(', '), '2017/4/29, 2017/4/30, 2017/4/31, 2017/5/1, 2017/5/2, 2017/5/3, 2017/5/4, 2017/5/5, 2017/5/6, 2017/5/7, 2017/5/8, 2017/5/9, 2017/5/10, 2017/5/11, 2017/5/12, 2017/5/13, 2017/5/14, 2017/5/15, 2017/5/16, 2017/5/17, 2017/5/18, 2017/5/19, 2017/5/20, 2017/5/21, 2017/5/22, 2017/5/23, 2017/5/24, 2017/5/25, 2017/5/26, 2017/5/27, 2017/5/28, 2017/5/29, 2017/5/30, 2017/6/1, 2017/6/2, 2017/6/3, 2017/6/4, 2017/6/5, 2017/6/6, 2017/6/7, 2017/6/8, 2017/6/9' );

  });

  it('june 2017 getByDay()', function () {

    var m = new Month(2017, 5);
    m = m.getByDay();
    var expected = {
      Sunday: [ '2017/5/4', '2017/5/11', '2017/5/18', '2017/5/25', '2017/6/2', '2017/6/9' ],
      Monday: [ '2017/4/29', '2017/5/5', '2017/5/12', '2017/5/19', '2017/5/26', '2017/6/3' ],
      Tuesday: [ '2017/4/30', '2017/5/6', '2017/5/13', '2017/5/20', '2017/5/27', '2017/6/4' ],
      Wednesday: [ '2017/4/31', '2017/5/7', '2017/5/14', '2017/5/21', '2017/5/28', '2017/6/5' ],
      Thursday: [ '2017/5/1', '2017/5/8', '2017/5/15', '2017/5/22', '2017/5/29', '2017/6/6' ],
      Friday: [ '2017/5/2', '2017/5/9', '2017/5/16', '2017/5/23', '2017/5/30', '2017/6/7' ],
      Saturday: [ '2017/5/3', '2017/5/10', '2017/5/17', '2017/5/24', '2017/6/1', '2017/6/8' ]
    };
    var actual = {};
    var days = Object.keys(m);
    days.forEach(function(day) {
      var arr = m[day].map(function(d) {
        return d.year + '/' + d.month + '/' + d.date;
      });
      actual[day] = arr;
    });
    assert.deepStrictEqual( actual, expected );

  });

  it('june 2018', function () {

    var m = new Month(2018, 5);

    assert.strictEqual( m.days.map(function (d) {
      return d.year + '/' + d.month + '/' + d.date;
    }).join(', '), '2018/4/28, 2018/4/29, 2018/4/30, 2018/4/31, 2018/5/1, 2018/5/2, 2018/5/3, 2018/5/4, 2018/5/5, 2018/5/6, 2018/5/7, 2018/5/8, 2018/5/9, 2018/5/10, 2018/5/11, 2018/5/12, 2018/5/13, 2018/5/14, 2018/5/15, 2018/5/16, 2018/5/17, 2018/5/18, 2018/5/19, 2018/5/20, 2018/5/21, 2018/5/22, 2018/5/23, 2018/5/24, 2018/5/25, 2018/5/26, 2018/5/27, 2018/5/28, 2018/5/29, 2018/5/30, 2018/6/1, 2018/6/2, 2018/6/3, 2018/6/4, 2018/6/5, 2018/6/6, 2018/6/7, 2018/6/8' );

  });

});
